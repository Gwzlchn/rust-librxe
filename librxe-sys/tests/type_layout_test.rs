use librxe_sys::types::*;

/// These tests are checking the memebr layout and size of rxe_* structs
/// Generated by bindgen

// rxe_av struct
#[test]
fn bindgen_test_layout_rxe_av_gid_addr_union() {
    assert_eq!(
        ::std::mem::size_of::<rxe_av_gid_addr_union_t>(),
        28usize,
        concat!("Size of: ", stringify!(rxe_av_gid_addr_union))
    );
    assert_eq!(
        ::std::mem::align_of::<rxe_av_gid_addr_union_t>(),
        4usize,
        concat!("Alignment of ", stringify!(rxe_av_gid_addr_union))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_av_gid_addr_union_t>()))._sockaddr_in as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_av_gid_addr_union),
            "::",
            stringify!(_sockaddr_in)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_av_gid_addr_union_t>()))._sockaddr_in6 as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_av_gid_addr_union),
            "::",
            stringify!(_sockaddr_in6)
        )
    );
}

#[test]
fn bindgen_test_layout_rxe_av() {
    assert_eq!(
        ::std::mem::size_of::<rxe_av>(),
        88usize,
        concat!("Size of: ", stringify!(rxe_av))
    );
    assert_eq!(
        ::std::mem::align_of::<rxe_av>(),
        8usize,
        concat!("Alignment of ", stringify!(rxe_av))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_av>())).port_num as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_av),
            "::",
            stringify!(port_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_av>())).network_type as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_av),
            "::",
            stringify!(network_type)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_av>())).dmac as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_av),
            "::",
            stringify!(dmac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_av>())).grh as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_av),
            "::",
            stringify!(grh)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_av>())).sgid_addr as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_av),
            "::",
            stringify!(sgid_addr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_av>())).dgid_addr as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_av),
            "::",
            stringify!(dgid_addr)
        )
    );
}

// rxe_send_wr struct
#[test]
fn bindgen_test_layout_rxe_send_wr_ex_union_t() {
    assert_eq!(
        ::std::mem::size_of::<rxe_send_wr_ex_union_t>(),
        4usize,
        concat!("Size of: ", stringify!(rxe_send_wr_ex_union_t))
    );
    assert_eq!(
        ::std::mem::align_of::<rxe_send_wr_ex_union_t>(),
        4usize,
        concat!("Alignment of ", stringify!(rxe_send_wr_ex_union_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wr_ex_union_t>())).imm_data as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_t),
            "::",
            stringify!(imm_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_t>())).invalidate_rkey as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_t),
            "::",
            stringify!(invalidate_rkey)
        )
    );
}

#[test]
fn bindgen_test_layout_rxe_send_wr_ex_union_rdma_t() {
    assert_eq!(
        ::std::mem::size_of::<rxe_send_wr_ex_union_rdma_t>(),
        16usize,
        concat!("Size of: ", stringify!(rxe_send_wr_ex_union_rdma_t))
    );
    assert_eq!(
        ::std::mem::align_of::<rxe_send_wr_ex_union_rdma_t>(),
        8usize,
        concat!("Alignment of ", stringify!(rxe_send_wr_ex_union_rdma_t))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_rdma_t>())).remote_addr as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_rdma_t),
            "::",
            stringify!(remote_addr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_rdma_t>())).rkey as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_rdma_t),
            "::",
            stringify!(rkey)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_rdma_t>())).reserved as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_rdma_t),
            "::",
            stringify!(reserved)
        )
    );
}

#[test]
fn bindgen_test_layout_rxe_send_wr_ex_union_atomic_t() {
    assert_eq!(
        ::std::mem::size_of::<rxe_send_wr_ex_union_atomic_t>(),
        32usize,
        concat!("Size of: ", stringify!(rxe_send_wr_ex_union_atomic_t))
    );
    assert_eq!(
        ::std::mem::align_of::<rxe_send_wr_ex_union_atomic_t>(),
        8usize,
        concat!("Alignment of ", stringify!(rxe_send_wr_ex_union_atomic_t))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_atomic_t>())).remote_addr as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_atomic_t),
            "::",
            stringify!(remote_addr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_atomic_t>())).compare_add as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_atomic_t),
            "::",
            stringify!(compare_add)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_atomic_t>())).swap as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_atomic_t),
            "::",
            stringify!(swap)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_atomic_t>())).rkey as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_atomic_t),
            "::",
            stringify!(rkey)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_atomic_t>())).reserved as *const _ as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_atomic_t),
            "::",
            stringify!(reserved)
        )
    );
}

#[test]
fn bindgen_test_layout_rxe_send_wr_ex_union_ud_t() {
    assert_eq!(
        ::std::mem::size_of::<rxe_send_wr_ex_union_ud_t>(),
        120usize,
        concat!("Size of: ", stringify!(rxe_send_wr_ex_union_ud_t))
    );
    assert_eq!(
        ::std::mem::align_of::<rxe_send_wr_ex_union_ud_t>(),
        8usize,
        concat!("Alignment of ", stringify!(rxe_send_wr_ex_union_ud_t))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_ud_t>())).remote_qpn as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_ud_t),
            "::",
            stringify!(remote_qpn)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_ud_t>())).remote_qkey as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_ud_t),
            "::",
            stringify!(remote_qkey)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_ud_t>())).pkey_index as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_ud_t),
            "::",
            stringify!(pkey_index)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_ud_t>())).reserved as *const _ as usize
        },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_ud_t),
            "::",
            stringify!(reserved)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_ud_t>())).ah_num as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_ud_t),
            "::",
            stringify!(ah_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wr_ex_union_ud_t>())).pad as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_ud_t),
            "::",
            stringify!(pad)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wr_ex_union_ud_t>())).av as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_ud_t),
            "::",
            stringify!(av)
        )
    );
}

#[test]
fn bindgen_test_layout_rxe_send_wr_ex_union_mw_t() {
    assert_eq!(
        ::std::mem::size_of::<rxe_send_wr_ex_union_mw_t>(),
        32usize,
        concat!("Size of: ", stringify!(rxe_send_wr_ex_union_mw_t))
    );
    assert_eq!(
        ::std::mem::align_of::<rxe_send_wr_ex_union_mw_t>(),
        8usize,
        concat!("Alignment of ", stringify!(rxe_send_wr_ex_union_mw_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wr_ex_union_mw_t>())).addr as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_mw_t),
            "::",
            stringify!(addr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_mw_t>())).length as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_mw_t),
            "::",
            stringify!(length)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_mw_t>())).mr_lkey as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_mw_t),
            "::",
            stringify!(mr_lkey)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_mw_t>())).mw_rkey as *const _ as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_mw_t),
            "::",
            stringify!(mw_rkey)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wr_ex_union_mw_t>())).rkey as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_mw_t),
            "::",
            stringify!(rkey)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<rxe_send_wr_ex_union_mw_t>())).access as *const _ as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_ex_union_mw_t),
            "::",
            stringify!(access)
        )
    );
}

#[test]
fn bindgen_test_layout_rxe_send_wr_wr_union_t() {
    assert_eq!(
        ::std::mem::size_of::<rxe_send_wr_wr_union_t>(),
        120usize,
        concat!("Size of: ", stringify!(rxe_send_wr_wr_union_t))
    );
    assert_eq!(
        ::std::mem::align_of::<rxe_send_wr_wr_union_t>(),
        8usize,
        concat!("Alignment of ", stringify!(rxe_send_wr_wr_union_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wr_wr_union_t>())).rdma as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_wr_union_t),
            "::",
            stringify!(rdma)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wr_wr_union_t>())).atomic as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_wr_union_t),
            "::",
            stringify!(atomic)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wr_wr_union_t>())).ud as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_wr_union_t),
            "::",
            stringify!(ud)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wr_wr_union_t>())).mw as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr_wr_union_t),
            "::",
            stringify!(mw)
        )
    );
}

#[test]
fn bindgen_test_layout_rxe_send_wr() {
    assert_eq!(
        ::std::mem::size_of::<rxe_send_wr>(),
        144usize,
        concat!("Size of: ", stringify!(rxe_send_wr))
    );
    assert_eq!(
        ::std::mem::align_of::<rxe_send_wr>(),
        8usize,
        concat!("Alignment of ", stringify!(rxe_send_wr))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wr>())).wr_id as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr),
            "::",
            stringify!(wr_id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wr>())).num_sge as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr),
            "::",
            stringify!(num_sge)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wr>())).opcode as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr),
            "::",
            stringify!(opcode)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wr>())).send_flags as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr),
            "::",
            stringify!(send_flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wr>())).ex as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr),
            "::",
            stringify!(ex)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wr>())).wr as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wr),
            "::",
            stringify!(wr)
        )
    );
}

#[test]
fn bindgen_test_layout_rxe_send_wqe() {
    assert_eq!(
        ::std::mem::size_of::<rxe_send_wqe>(),
        208usize,
        concat!("Size of: ", stringify!(rxe_send_wqe))
    );
    assert_eq!(
        ::std::mem::align_of::<rxe_send_wqe>(),
        8usize,
        concat!("Alignment of ", stringify!(rxe_send_wqe))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wqe>())).wr as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wqe),
            "::",
            stringify!(wr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wqe>())).status as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wqe),
            "::",
            stringify!(status)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wqe>())).state as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wqe),
            "::",
            stringify!(state)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wqe>())).iova as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wqe),
            "::",
            stringify!(iova)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wqe>())).mask as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wqe),
            "::",
            stringify!(mask)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wqe>())).first_psn as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wqe),
            "::",
            stringify!(first_psn)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wqe>())).last_psn as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wqe),
            "::",
            stringify!(last_psn)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wqe>())).ack_length as *const _ as usize },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wqe),
            "::",
            stringify!(ack_length)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wqe>())).ssn as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wqe),
            "::",
            stringify!(ssn)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wqe>())).has_rd_atomic as *const _ as usize },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wqe),
            "::",
            stringify!(has_rd_atomic)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rxe_send_wqe>())).dma as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(rxe_send_wqe),
            "::",
            stringify!(dma)
        )
    );
}
